<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!--上面2行的是约束依赖，固定照抄就好-->
<!--下面的才是要自己编写的地方-->
<!--写mapper的配置文件第一步就是要写<mapper></mapper>标签-->
<!--<mapper></mapper>标签里包含着各个CURD操作的SQL语句-->
<mapper namespace="com.sb_mb.drone_news.dao.newsMapper">
    <!--定义一个名为BaseResultMap的返回类型-->
  <resultMap id="BaseResultMap" type="com.sb_mb.drone_news.entity.news">
        <id column="NewsImage" property="NewsImage" jdbcType="VARCHAR"></id>
        <result column="NewsID" property="NewsID" jdbcType="INTEGER"></result>
        <result column="NewsTitle" property="NewsTitle" jdbcType="VARCHAR"></result>
    </resultMap>

  <!-- 新闻格式 -->
  <resultMap type="com.sb_mb.drone_news.entity.news" id="NewsBaseResultMap">

 		<id column="NewsID" property="NewsID" jdbcType="INTEGER"></id>
        <result column="NewsImage" property="NewsImage" jdbcType="VARCHAR"></result>
 		<result column="NewsTitle" property="NewsTitle" jdbcType="VARCHAR"></result>
        <result column="NewsContent" property="NewsContent" jdbcType="LONGVARCHAR"></result>
        <result column="ReadCount" property="ReadCount" jdbcType="INTEGER"></result>
        <result column="NewsAuthorName" property="NewsAuthorName" jdbcType="VARCHAR"></result>
        <result column="NewsAuthorImage" property="NewsAuthorImage" jdbcType="VARCHAR"></result>
 	</resultMap>

  <!-- 视频格式 -->
  <resultMap type="com.sb_mb.drone_news.entity.video" id="VideoBaseResultMap">
 		<id column ="VideoID" property="VideoID" jdbcType="INTEGER"></id>
        <result column="VideoLink" property="VideoLink" jdbcType="LONGVARCHAR"></result>
 		<result column="VideoTitle" property="VideoTitle" jdbcType="VARCHAR"></result>
 		<result column="VideoAuthorName" property="VideoAuthorName" jdbcType="VARCHAR"></result>
        <result column="VideoAuthorImage" property="VideoAuthorImage" jdbcType="LONGVARCHAR"></result>
        <result column="ViewCount" property="ViewCount" jdbcType="INTEGER"></result>
        <result column="VideoLike" property="VideoLike" jdbcType="INTEGER"></result>
        <result column="VideoComments" property="VideoComments" jdbcType="INTEGER"></result>
        <result column="VideoType" property="VideoType" jdbcType="VARCHAR"></result>

 	</resultMap>
    <!--/用户格式/-->
  <resultMap type="com.sb_mb.drone_news.entity.user" id="UserBaseResultMap" >
        <id column="Account" property="Account" jdbcType="INTEGER"></id>
        <result column="Password" property="Password" jdbcType="VARCHAR"></result>
  </resultMap>
    <!--删除语句-->
    <delete id="deletenews" parameterType="java.lang.Integer">
      delete from news where NewsID =#{id,jdbcType=INTEGER}
    </delete>
    <delete id="deletevideo" parameterType="java.lang.Integer">
      delete from video where VideoID =#{id,jdbcType=INTEGER}
    </delete>
    <!--插入新闻-->
    <insert id="addnews" parameterType="com.sb_mb.drone_news.entity.news">
      insert into news(NewsImage,NewsID,NewsTitle,NewsContent,ReadCount,NewsAuthorName,NewsAuthorImage)
      values(#{newsImage,jdbcType=VARCHAR},#{newsID,jdbcType=INTEGER},#{newsTitle,jdbcType=VARCHAR},
      #{newsContent,jdbcType=LONGVARCHAR},#{readCount,jdbcType=INTEGER},#{newsAuthorName,jdbcType=VARCHAR},
      #{newsAuthorImage,jdbcType=VARCHAR})/*SQL语句*/
    </insert>

    <!--插入视频-->
    <insert id="addvideo" parameterType="com.sb_mb.drone_news.entity.video">
      insert into video(VideoID,VideoLink,VideoTitle,VideoAuthorName,VideoType,ViewCount,VideoLike,VideoComments,VideoAuthorImage)
      values(#{videoID,jdbcType=INTEGER},#{videoLink,jdbcType=LONGVARCHAR},#{videoTitle,jdbcType=VARCHAR},
      #{videoAuthorName,jdbcType=VARCHAR},#{videoType,jdbcType=VARCHAR},#{viewCount,jdbcType=INTEGER},#{videoLike,jdbcType=INTEGER},
      #{videoComments,jdbcType=INTEGER},#{videoAuthorImage,jdbcType=LONGVARCHAR})/*SQL语句*/
    </insert>
  <select id="selectAllNews" resultMap="NewsBaseResultMap">
      select *from news
  </select>

  <select id="selectNews" parameterType="java.lang.Integer" resultMap="NewsBaseResultMap">
       select * from news where NewsID = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectVideo" parameterType="java.lang.Integer" resultMap="VideoBaseResultMap">
       select * from video where VideoID = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectUser" parameterType="java.lang.Integer" resultMap="UserBaseResultMap">
       select * from users where Account = #{id,jdbcType=INTEGER}
  </select>
  <!-- 查询所有视频 -->
  <select id="selectAllVideo" resultMap="VideoBaseResultMap">
    	select *from video
  </select>
    <!--更新新闻信息-->
  <update id="updatenews" parameterType="com.sb_mb.drone_news.entity.news">
		update news set NewsTitle = #{newsTitle,jdbcType=VARCHAR},NewsAuthorName = #{newsAuthorName,jdbcType=LONGVARCHAR},
		ReadCount = #{readCount,jdbcType=INTEGER}
		where NewsID=#{newsID,jdbcType=INTEGER}
  </update>
  <update id="updatevideo" parameterType="com.sb_mb.drone_news.entity.video">
		update video set VideoTitle = #{videoTitle,jdbcType=VARCHAR},VideoAuthorName = #{videoAuthorName,jdbcType=VARCHAR},
		VideoType = #{videoType,jdbcType=VARCHAR}
		where VideoID=#{videoID,jdbcType=INTEGER}
  </update>
  <!--更新视频的喜欢数目-->
  <update id="updateVideolike" parameterType="java.lang.Integer">
    	update Video set VideoLike=VideoLike+1 where VideoID=#{id,jdbcType=INTEGER}
  </update>
  <update id="updateViewCount" parameterType="java.lang.Integer">
    	update Video set ViewCount=ViewCount+1 where VideoID=#{id,jdbcType=INTEGER}
  </update>
</mapper>